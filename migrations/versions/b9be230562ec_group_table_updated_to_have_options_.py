"""group table updated to have options beside the json(manual) share-percents.

Revision ID: b9be230562ec
Revises: 1116f0f4b2bf
Create Date: 2025-03-27 20:38:27.222613

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'b9be230562ec'
down_revision = '1116f0f4b2bf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_groups')
    with op.batch_alter_table('groups', schema=None, recreate='always') as batch_op:
        batch_op.add_column(sa.Column('alloting_by', sa.Boolean(), nullable=False, default=0), insert_before='created_at')
        batch_op.add_column(sa.Column('occupied_only', sa.Boolean(), nullable=False, default=0), insert_before='created_at')
        batch_op.add_column(sa.Column('reserve', sa.Boolean(), nullable=False, default=0), insert_before='created_at')
        batch_op.add_column(sa.Column('building_id', sa.Integer(), nullable=False, default=1), insert_before='created_at')
        batch_op.create_index(batch_op.f('ix_groups_alloting_by'), ['alloting_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_groups_occupied_only'), ['occupied_only'], unique=False)
        batch_op.create_index(batch_op.f('ix_groups_reserve'), ['reserve'], unique=False)
        batch_op.create_foreign_key(batch_op.f('fk_groups_building_id_buildings'), 'buildings', ['building_id'], ['building_id'], onupdate='CASCADE', ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_groups_building_id_buildings'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_groups_reserve'))
        batch_op.drop_index(batch_op.f('ix_groups_occupied_only'))
        batch_op.drop_index(batch_op.f('ix_groups_alloting_by'))
        batch_op.drop_column('reserve')
        batch_op.drop_column('occupied_only')
        batch_op.drop_column('alloting_by')
        batch_op.drop_column('building_id')

    op.create_table('_alembic_tmp_groups',
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('members_shares', sqlite.JSON(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=256), nullable=True),
    sa.Column('owner', sa.BOOLEAN(), nullable=False),
    sa.Column('occupied_only', sa.BOOLEAN(), nullable=False),
    sa.Column('alloting_by', sa.BOOLEAN(), nullable=False),
    sa.Column('reserve', sa.BOOLEAN(), nullable=False),
    sa.Column('building_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.building_id'], name='fk_groups_building_id_buildings', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', name='pk_groups')
    )
    # ### end Alembic commands ###
