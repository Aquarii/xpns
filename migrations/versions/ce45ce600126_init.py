"""init

Revision ID: ce45ce600126
Revises: 
Create Date: 2025-03-15 23:07:35.045687

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce45ce600126'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buildings',
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('stories_count', sa.Integer(), nullable=False),
    sa.Column('units_count', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('building_id', name=op.f('pk_buildings')),
    sa.UniqueConstraint('name', 'address', name='building_unique_const')
    )
    op.create_table('expenses',
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('expense_id', name=op.f('pk_expenses'))
    )
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('members_shares', sa.JSON(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('owner', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('group_id', name=op.f('pk_groups'))
    )
    op.create_table('share',
    sa.Column('share_id', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('unit_number', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expenses.expense_id'], name=op.f('fk_share_expense_id_expenses'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('share_id', name=op.f('pk_share'))
    )
    with op.batch_alter_table('share', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_share_period'), ['period'], unique=False)
        batch_op.create_index(batch_op.f('ix_share_unit_number'), ['unit_number'], unique=False)

    op.create_table('units',
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('unit_number', sa.Integer(), nullable=False),
    sa.Column('resident', sa.String(), nullable=False),
    sa.Column('number_of_people', sa.Integer(), nullable=False),
    sa.Column('story', sa.Integer(), nullable=False),
    sa.Column('owner', sa.String(), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.building_id'], name=op.f('fk_units_building_id_buildings'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('unit_id', name=op.f('pk_units')),
    sa.UniqueConstraint('unit_number', 'building_id', name='unit_number_building_unique_const')
    )
    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_units_building_id'), ['building_id'], unique=False)

    op.create_table('transaction',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['unit_id'], ['units.unit_id'], name=op.f('fk_transaction_unit_id_units'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id', name=op.f('pk_transaction'))
    )
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transaction_sender'), ['sender'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transaction_sender'))

    op.drop_table('transaction')
    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_units_building_id'))

    op.drop_table('units')
    with op.batch_alter_table('share', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_share_unit_number'))
        batch_op.drop_index(batch_op.f('ix_share_period'))

    op.drop_table('share')
    op.drop_table('groups')
    op.drop_table('expenses')
    op.drop_table('buildings')
    # ### end Alembic commands ###
